//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Rengex.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Rengex.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to # 가져오기 단계에서 추출할 텍스트의 정규식 파일입니다. 기본값으로 파일 전체를 번역합니다.
        ///# 파일 전체가 하나의 정규식이고, #으로 시작하는 줄은 주석으로 처리됩니다.# (?&lt;영문이름&gt;)으로 감싼 그룹의 내용만 추출합니다.
        ///# 닷넷 정규식 문법 URL: https://docs.microsoft.com/ko-kr/dotnet/standard/base-types/regular-expression-language-quick-reference
        ///# 정규식 테스트 URL: https://regex101.com/r/dqgl16/1
        ///
        ///(?&lt;name&gt;[^\0]*)
        ///.
        /// </summary>
        internal static string DefaultMatch {
            get {
                return ResourceManager.GetString("DefaultMatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to # 번역 전, 후의 텍스트를 치환하는 정규식 설정 파일입니다.
        ///# 첫째는 패턴 정규식입니다. 찾은 모든 해당 패턴을 치환합니다.
        ///# 패턴 시작 부분에 (?=)(?:)를 붙일 수 있습니다.
        ///# (?=)는 번역 전의 치환 규칙(이하 전처리)임을 의미합니다.
        ///# (?:)는 전처리에선 &quot;\0그룹이름&quot;을, 후처리에선 &quot;\0원문\0그룹이름&quot;을 뒤에 붙여달라는 것을 의미합니다.
        ///# 
        ///# 둘째는 치환 정규식입니다. $1등으로 이전 문자열 보존이 가능합니다.
        ///# 빈 문자열을 넣고 싶으면 비우지 말고 $을 적습니다.
        ///# 
        ///# *[파일경로]인 줄은 해당 위치에서 다른 설정파일을 적용합니다.
        ///# 치환은 한 패턴이 성공하더라도 전부 수행됩니다.
        ///.
        /// </summary>
        internal static string DefaultReplace {
            get {
                return ResourceManager.GetString("DefaultReplace", resourceCulture);
            }
        }
    }
}
